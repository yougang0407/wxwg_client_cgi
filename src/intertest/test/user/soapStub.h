/* soapStub.h
   Generated by gSOAP 2.8.71 for user.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_ns2	"http://thrift.apache.org"
#define SOAP_NAMESPACE_OF_ns1	"http://Service.RNS.app"
#define SOAP_NAMESPACE_OF_ns3	"http://xml.apache.org/xml-soap"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20871
# error "GSOAP VERSION 20871 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Structs and Unions                                                         *
 *                                                                            *
\******************************************************************************/

struct ns2__TException;	/* user.h:193 */
struct ns3__Vector;	/* user.h:222 */
struct ArrayOf_USCORExsd_USCOREanyType;	/* user.h:240 */
typedef struct _ns1__TException _ns1__TException;	/* user.h:365 */
struct ns1__ChallengeResponse;	/* user.h:458 */
struct ns1__Challenge;	/* user.h:458 */
struct ns1__UserListGetResponse;	/* user.h:513 */
struct ns1__UserListGet;	/* user.h:513 */
struct ns1__getLocalHostIpResponse;	/* user.h:565 */
struct ns1__getLocalHostIp;	/* user.h:565 */
struct ns1__UserDefineResponse;	/* user.h:620 */
struct ns1__UserDefine;	/* user.h:620 */
struct ns1__UserModifyResponse;	/* user.h:675 */
struct ns1__UserModify;	/* user.h:675 */
struct ns1__UserCancelResponse;	/* user.h:730 */
struct ns1__UserCancel;	/* user.h:730 */
struct ns1__unitListGetResponse;	/* user.h:785 */
struct ns1__unitListGet;	/* user.h:785 */
struct ns1__dicDataGetResponse;	/* user.h:843 */
struct ns1__dicDataGet;	/* user.h:843 */
struct ns1__synAuthListResponse;	/* user.h:854 */
struct ns1__synAuthList;	/* user.h:902 */

/* user.h:193 */
#ifndef SOAP_TYPE_ns2__TException
#define SOAP_TYPE_ns2__TException (8)
/* complex XML schema type 'ns2:TException': */
struct ns2__TException {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* user.h:222 */
#ifndef SOAP_TYPE_ns3__Vector
#define SOAP_TYPE_ns3__Vector (9)
/* complex XML schema type 'ns3:Vector': */
struct ns3__Vector {
        /** Sequence of elements 'item' of XML schema type 'xsd:anyType' stored in dynamic array item of length __sizeitem */
        int __sizeitem;
        char **item;
};
#endif

/* user.h:240 */
#ifndef SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType
#define SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType (11)
/* Sequence of xsd:anyType schema type: */
struct ArrayOf_USCORExsd_USCOREanyType {
        char **__ptr;
        int __size;
};
#endif

/* user.h:365 */
#ifndef SOAP_TYPE__ns1__TException
#define SOAP_TYPE__ns1__TException (12)
/* complex XML schema type 'ns1:TException': */
struct _ns1__TException {
        /** Optional element 'fault' of XML schema type 'ns2:TException' */
        struct ns2__TException *fault;
};
#endif

/* user.h:387 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (14)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
        /** Optional element 'ns1:TException' of XML schema type 'ns1:TException' */
        struct _ns1__TException *ns1__TException;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
        char *__any;
};
#endif
#endif

/* user.h:458 */
#ifndef SOAP_TYPE_ns1__ChallengeResponse
#define SOAP_TYPE_ns1__ChallengeResponse (20)
/* complex XML schema type 'ns1:ChallengeResponse': */
struct ns1__ChallengeResponse {
        /** Optional element 'ChallengeReturn' of XML schema type 'SOAP-ENC:string' */
        char **_ChallengeReturn;
};
#endif

/* user.h:458 */
#ifndef SOAP_TYPE_ns1__Challenge
#define SOAP_TYPE_ns1__Challenge (21)
/* complex XML schema type 'ns1:Challenge': */
struct ns1__Challenge {
        /** Optional element 'challenge' of XML schema type 'SOAP-ENC:string' */
        char *_challenge;
};
#endif

/* user.h:513 */
#ifndef SOAP_TYPE_ns1__UserListGetResponse
#define SOAP_TYPE_ns1__UserListGetResponse (23)
/* complex XML schema type 'ns1:UserListGetResponse': */
struct ns1__UserListGetResponse {
        /** Optional element 'UserListGetReturn' of XML schema type 'SOAP-ENC:string' */
        char **_UserListGetReturn;
};
#endif

/* user.h:513 */
#ifndef SOAP_TYPE_ns1__UserListGet
#define SOAP_TYPE_ns1__UserListGet (24)
/* complex XML schema type 'ns1:UserListGet': */
struct ns1__UserListGet {
        /** Optional element 'inStr' of XML schema type 'SOAP-ENC:string' */
        char *_inStr;
};
#endif

/* user.h:565 */
#ifndef SOAP_TYPE_ns1__getLocalHostIpResponse
#define SOAP_TYPE_ns1__getLocalHostIpResponse (26)
/* complex XML schema type 'ns1:getLocalHostIpResponse': */
struct ns1__getLocalHostIpResponse {
        /** Optional element 'getLocalHostIpReturn' of XML schema type 'SOAP-ENC:string' */
        char **getLocalHostIpReturn;
};
#endif

/* user.h:565 */
#ifndef SOAP_TYPE_ns1__getLocalHostIp
#define SOAP_TYPE_ns1__getLocalHostIp (27)
/* complex XML schema type 'ns1:getLocalHostIp': */
struct ns1__getLocalHostIp {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* user.h:620 */
#ifndef SOAP_TYPE_ns1__UserDefineResponse
#define SOAP_TYPE_ns1__UserDefineResponse (29)
/* complex XML schema type 'ns1:UserDefineResponse': */
struct ns1__UserDefineResponse {
        /** Optional element 'UserDefineReturn' of XML schema type 'SOAP-ENC:string' */
        char **_UserDefineReturn;
};
#endif

/* user.h:620 */
#ifndef SOAP_TYPE_ns1__UserDefine
#define SOAP_TYPE_ns1__UserDefine (30)
/* complex XML schema type 'ns1:UserDefine': */
struct ns1__UserDefine {
        /** Optional element 'inStr' of XML schema type 'SOAP-ENC:string' */
        char *_inStr;
};
#endif

/* user.h:675 */
#ifndef SOAP_TYPE_ns1__UserModifyResponse
#define SOAP_TYPE_ns1__UserModifyResponse (32)
/* complex XML schema type 'ns1:UserModifyResponse': */
struct ns1__UserModifyResponse {
        /** Optional element 'UserModifyReturn' of XML schema type 'SOAP-ENC:string' */
        char **_UserModifyReturn;
};
#endif

/* user.h:675 */
#ifndef SOAP_TYPE_ns1__UserModify
#define SOAP_TYPE_ns1__UserModify (33)
/* complex XML schema type 'ns1:UserModify': */
struct ns1__UserModify {
        /** Optional element 'inStr' of XML schema type 'SOAP-ENC:string' */
        char *_inStr;
};
#endif

/* user.h:730 */
#ifndef SOAP_TYPE_ns1__UserCancelResponse
#define SOAP_TYPE_ns1__UserCancelResponse (35)
/* complex XML schema type 'ns1:UserCancelResponse': */
struct ns1__UserCancelResponse {
        /** Optional element 'UserCancelReturn' of XML schema type 'SOAP-ENC:string' */
        char **_UserCancelReturn;
};
#endif

/* user.h:730 */
#ifndef SOAP_TYPE_ns1__UserCancel
#define SOAP_TYPE_ns1__UserCancel (36)
/* complex XML schema type 'ns1:UserCancel': */
struct ns1__UserCancel {
        /** Optional element 'inStr' of XML schema type 'SOAP-ENC:string' */
        char *_inStr;
};
#endif

/* user.h:785 */
#ifndef SOAP_TYPE_ns1__unitListGetResponse
#define SOAP_TYPE_ns1__unitListGetResponse (38)
/* complex XML schema type 'ns1:unitListGetResponse': */
struct ns1__unitListGetResponse {
        /** Optional element 'unitListGetReturn' of XML schema type 'SOAP-ENC:string' */
        char **unitListGetReturn;
};
#endif

/* user.h:785 */
#ifndef SOAP_TYPE_ns1__unitListGet
#define SOAP_TYPE_ns1__unitListGet (39)
/* complex XML schema type 'ns1:unitListGet': */
struct ns1__unitListGet {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* user.h:843 */
#ifndef SOAP_TYPE_ns1__dicDataGetResponse
#define SOAP_TYPE_ns1__dicDataGetResponse (41)
/* complex XML schema type 'ns1:dicDataGetResponse': */
struct ns1__dicDataGetResponse {
        /** Optional element 'dicDataGetReturn' of XML schema type 'SOAP-ENC:string' */
        char **_dicDataGetReturn;
};
#endif

/* user.h:843 */
#ifndef SOAP_TYPE_ns1__dicDataGet
#define SOAP_TYPE_ns1__dicDataGet (42)
/* complex XML schema type 'ns1:dicDataGet': */
struct ns1__dicDataGet {
        /** Optional element 'type' of XML schema type 'SOAP-ENC:string' */
        char *_type;
};
#endif

/* user.h:854 */
#ifndef SOAP_TYPE_ns1__synAuthListResponse
#define SOAP_TYPE_ns1__synAuthListResponse (43)
/* complex XML schema type 'ns1:synAuthListResponse': */
struct ns1__synAuthListResponse {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* user.h:902 */
#ifndef SOAP_TYPE_ns1__synAuthList
#define SOAP_TYPE_ns1__synAuthList (47)
/* complex XML schema type 'ns1:synAuthList': */
struct ns1__synAuthList {
        /** Optional element 'authList' of XML schema type 'ArrayOf_xsd_anyType' */
        struct ArrayOf_USCORExsd_USCOREanyType *_authList;
};
#endif

/* user.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (48)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* user.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (49)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
};
#endif
#endif

/* user.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (51)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
};
#endif
#endif

/* user.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (52)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/* user.h:140 */
#ifndef SOAP_TYPE_SOAP_ENC__string
#define SOAP_TYPE_SOAP_ENC__string (7)
typedef char *SOAP_ENC__string;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (52)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (51)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (49)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (48)
#endif

/* struct ns1__synAuthList has binding name 'ns1__synAuthList' for type 'ns1:synAuthList' */
#ifndef SOAP_TYPE_ns1__synAuthList
#define SOAP_TYPE_ns1__synAuthList (47)
#endif

/* struct ns1__synAuthListResponse has binding name 'ns1__synAuthListResponse' for type 'ns1:synAuthListResponse' */
#ifndef SOAP_TYPE_ns1__synAuthListResponse
#define SOAP_TYPE_ns1__synAuthListResponse (43)
#endif

/* struct ns1__dicDataGet has binding name 'ns1__dicDataGet' for type 'ns1:dicDataGet' */
#ifndef SOAP_TYPE_ns1__dicDataGet
#define SOAP_TYPE_ns1__dicDataGet (42)
#endif

/* struct ns1__dicDataGetResponse has binding name 'ns1__dicDataGetResponse' for type 'ns1:dicDataGetResponse' */
#ifndef SOAP_TYPE_ns1__dicDataGetResponse
#define SOAP_TYPE_ns1__dicDataGetResponse (41)
#endif

/* struct ns1__unitListGet has binding name 'ns1__unitListGet' for type 'ns1:unitListGet' */
#ifndef SOAP_TYPE_ns1__unitListGet
#define SOAP_TYPE_ns1__unitListGet (39)
#endif

/* struct ns1__unitListGetResponse has binding name 'ns1__unitListGetResponse' for type 'ns1:unitListGetResponse' */
#ifndef SOAP_TYPE_ns1__unitListGetResponse
#define SOAP_TYPE_ns1__unitListGetResponse (38)
#endif

/* struct ns1__UserCancel has binding name 'ns1__UserCancel' for type 'ns1:UserCancel' */
#ifndef SOAP_TYPE_ns1__UserCancel
#define SOAP_TYPE_ns1__UserCancel (36)
#endif

/* struct ns1__UserCancelResponse has binding name 'ns1__UserCancelResponse' for type 'ns1:UserCancelResponse' */
#ifndef SOAP_TYPE_ns1__UserCancelResponse
#define SOAP_TYPE_ns1__UserCancelResponse (35)
#endif

/* struct ns1__UserModify has binding name 'ns1__UserModify' for type 'ns1:UserModify' */
#ifndef SOAP_TYPE_ns1__UserModify
#define SOAP_TYPE_ns1__UserModify (33)
#endif

/* struct ns1__UserModifyResponse has binding name 'ns1__UserModifyResponse' for type 'ns1:UserModifyResponse' */
#ifndef SOAP_TYPE_ns1__UserModifyResponse
#define SOAP_TYPE_ns1__UserModifyResponse (32)
#endif

/* struct ns1__UserDefine has binding name 'ns1__UserDefine' for type 'ns1:UserDefine' */
#ifndef SOAP_TYPE_ns1__UserDefine
#define SOAP_TYPE_ns1__UserDefine (30)
#endif

/* struct ns1__UserDefineResponse has binding name 'ns1__UserDefineResponse' for type 'ns1:UserDefineResponse' */
#ifndef SOAP_TYPE_ns1__UserDefineResponse
#define SOAP_TYPE_ns1__UserDefineResponse (29)
#endif

/* struct ns1__getLocalHostIp has binding name 'ns1__getLocalHostIp' for type 'ns1:getLocalHostIp' */
#ifndef SOAP_TYPE_ns1__getLocalHostIp
#define SOAP_TYPE_ns1__getLocalHostIp (27)
#endif

/* struct ns1__getLocalHostIpResponse has binding name 'ns1__getLocalHostIpResponse' for type 'ns1:getLocalHostIpResponse' */
#ifndef SOAP_TYPE_ns1__getLocalHostIpResponse
#define SOAP_TYPE_ns1__getLocalHostIpResponse (26)
#endif

/* struct ns1__UserListGet has binding name 'ns1__UserListGet' for type 'ns1:UserListGet' */
#ifndef SOAP_TYPE_ns1__UserListGet
#define SOAP_TYPE_ns1__UserListGet (24)
#endif

/* struct ns1__UserListGetResponse has binding name 'ns1__UserListGetResponse' for type 'ns1:UserListGetResponse' */
#ifndef SOAP_TYPE_ns1__UserListGetResponse
#define SOAP_TYPE_ns1__UserListGetResponse (23)
#endif

/* struct ns1__Challenge has binding name 'ns1__Challenge' for type 'ns1:Challenge' */
#ifndef SOAP_TYPE_ns1__Challenge
#define SOAP_TYPE_ns1__Challenge (21)
#endif

/* struct ns1__ChallengeResponse has binding name 'ns1__ChallengeResponse' for type 'ns1:ChallengeResponse' */
#ifndef SOAP_TYPE_ns1__ChallengeResponse
#define SOAP_TYPE_ns1__ChallengeResponse (20)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (14)
#endif

/* struct _ns1__TException has binding name '_ns1__TException' for type '' */
#ifndef SOAP_TYPE__ns1__TException
#define SOAP_TYPE__ns1__TException (12)
#endif

/* struct ArrayOf_USCORExsd_USCOREanyType has binding name 'ArrayOf_USCORExsd_USCOREanyType' for type 'xsd:anyType' */
#ifndef SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType
#define SOAP_TYPE_ArrayOf_USCORExsd_USCOREanyType (11)
#endif

/* struct ns3__Vector has binding name 'ns3__Vector' for type 'ns3:Vector' */
#ifndef SOAP_TYPE_ns3__Vector
#define SOAP_TYPE_ns3__Vector (9)
#endif

/* struct ns2__TException has binding name 'ns2__TException' for type 'ns2:TException' */
#ifndef SOAP_TYPE_ns2__TException
#define SOAP_TYPE_ns2__TException (8)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (54)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (53)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (50)
#endif

/* struct ns1__synAuthListResponse * has binding name 'PointerTons1__synAuthListResponse' for type 'ns1:synAuthListResponse' */
#ifndef SOAP_TYPE_PointerTons1__synAuthListResponse
#define SOAP_TYPE_PointerTons1__synAuthListResponse (45)
#endif

/* struct ArrayOf_USCORExsd_USCOREanyType * has binding name 'PointerToArrayOf_USCORExsd_USCOREanyType' for type '' */
#ifndef SOAP_TYPE_PointerToArrayOf_USCORExsd_USCOREanyType
#define SOAP_TYPE_PointerToArrayOf_USCORExsd_USCOREanyType (44)
#endif

/* char ** has binding name 'PointerToSOAP_ENC__string' for type 'SOAP-ENC:string' */
#ifndef SOAP_TYPE_PointerToSOAP_ENC__string
#define SOAP_TYPE_PointerToSOAP_ENC__string (18)
#endif

/* struct _ns1__TException * has binding name 'PointerTo_ns1__TException' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__TException
#define SOAP_TYPE_PointerTo_ns1__TException (15)
#endif

/* struct ns2__TException * has binding name 'PointerTons2__TException' for type 'ns2:TException' */
#ifndef SOAP_TYPE_PointerTons2__TException
#define SOAP_TYPE_PointerTons2__TException (13)
#endif

/* char ** has binding name 'PointerTo_XML' for type '' */
#ifndef SOAP_TYPE_PointerTo_XML
#define SOAP_TYPE_PointerTo_XML (10)
#endif

/* SOAP_ENC__string has binding name 'SOAP_ENC__string' for type 'SOAP-ENC:string' */
#ifndef SOAP_TYPE_SOAP_ENC__string
#define SOAP_TYPE_SOAP_ENC__string (7)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Challenge(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_challenge, char **_ChallengeReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__UserListGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_inStr, char **_UserListGetReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getLocalHostIp(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **getLocalHostIpReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__UserDefine(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_inStr, char **_UserDefineReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__UserModify(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_inStr, char **_UserModifyReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__UserCancel(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_inStr, char **_UserCancelReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__unitListGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **unitListGetReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dicDataGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_type, char **_dicDataGetReturn);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__synAuthList(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOf_USCORExsd_USCOREanyType *_authList, struct ns1__synAuthListResponse *_param_1);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns1__Challenge' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__Challenge(struct soap*, char *_challenge, char **_ChallengeReturn);
    /** Web service operation 'ns1__UserListGet' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__UserListGet(struct soap*, char *_inStr, char **_UserListGetReturn);
    /** Web service operation 'ns1__getLocalHostIp' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__getLocalHostIp(struct soap*, char **getLocalHostIpReturn);
    /** Web service operation 'ns1__UserDefine' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__UserDefine(struct soap*, char *_inStr, char **_UserDefineReturn);
    /** Web service operation 'ns1__UserModify' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__UserModify(struct soap*, char *_inStr, char **_UserModifyReturn);
    /** Web service operation 'ns1__UserCancel' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__UserCancel(struct soap*, char *_inStr, char **_UserCancelReturn);
    /** Web service operation 'ns1__unitListGet' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__unitListGet(struct soap*, char **unitListGetReturn);
    /** Web service operation 'ns1__dicDataGet' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__dicDataGet(struct soap*, char *_type, char **_dicDataGetReturn);
    /** Web service operation 'ns1__synAuthList' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns1__synAuthList(struct soap*, struct ArrayOf_USCORExsd_USCOREanyType *_authList, struct ns1__synAuthListResponse *_param_1);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__Challenge(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UserListGet(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getLocalHostIp(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UserDefine(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UserModify(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__UserCancel(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__unitListGet(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__dicDataGet(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__synAuthList(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
